use crate::primitives::deal::{BoardVulnerability, PlayerPosition};

#[derive(Copy, Clone)]
pub enum Vulnerability {
    None,
    Us,
    Them,
    All,
}

impl Vulnerability {
    pub const fn interpret_board_vulnerability(
        board_vulnerability: &BoardVulnerability,
        my_seat: PlayerPosition,
    ) -> Self {
        match (board_vulnerability, my_seat) {
            (BoardVulnerability::None, _) => Vulnerability::None,
            (BoardVulnerability::All, _) => Vulnerability::All,
            (BoardVulnerability::NorthSouth, PlayerPosition::North) => Vulnerability::Us,
            (BoardVulnerability::NorthSouth, PlayerPosition::South) => Vulnerability::Us,
            (BoardVulnerability::EastWest, PlayerPosition::East) => Vulnerability::Us,
            (BoardVulnerability::EastWest, PlayerPosition::West) => Vulnerability::Us,
            (BoardVulnerability::NorthSouth, PlayerPosition::East) => Vulnerability::Them,
            (BoardVulnerability::NorthSouth, PlayerPosition::West) => Vulnerability::Them,
            (BoardVulnerability::EastWest, PlayerPosition::North) => Vulnerability::Them,
            (BoardVulnerability::EastWest, PlayerPosition::South) => Vulnerability::Them,
        }
    }
}
